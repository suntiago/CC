
project.apply plugin: 'cc-register'
//project.dependencies.add('api', project(':cc')) //用最新版
project.dependencies.add('api', "com.billy.android:cc:2.1.6") //用最新版

dependencies {
    //其它apply当前gradle文件的module统一添加对demo_base的依赖
    if (project.name != 'demo_base'){
        implementation project(':demo_base')
    }
    //2018-06-03新增：这里是为了示例添加全局拦截器
    if (project.ext.has('runAsApp') && project.ext.runAsApp) {
        //说明：需要兼容的情况有3种(单独组件作为app运行、打包在主app内、组件在多个app上复用但全局拦截器不同)
        //     为了兼容以上3种情况，建议将全局拦截器作为一个单独的module，在此处给不同app添加不同拦截器module
        implementation project(':demo_interceptors')
    }
}
ccregister.registerInfo.add([
    //在自动注册组件的基础上增加：自动注册组件B的processor
    'scanInterface'             : 'com.billy.cc.demo.component.b.processor.IActionProcessor'
    , 'codeInsertToClassName'   : 'com.billy.cc.demo.component.b.ComponentB'
    , 'codeInsertToMethodName'  : 'initProcessors'
    , 'registerMethodName'      : 'add'
])
//也可以按照上述格式继续添加你自己的自动注册需求，俗称：搭顺风车

//开启app内部多进程组件调用
ccregister.multiProcessEnabled = true
